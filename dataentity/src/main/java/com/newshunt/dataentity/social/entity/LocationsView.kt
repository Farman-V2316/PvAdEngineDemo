/*
 * Copyright (c) 2020 Newshunt. All rights reserved.
 */

package com.newshunt.dataentity.social.entity

import androidx.room.DatabaseView
import androidx.room.Embedded
import com.newshunt.dataentity.common.asset.Location

/**
 * isFollowed is a column in [Location]. We need it to be derived from (by joining the ) `follows` table.
 * So created this view - it calculates isFollowed field from follows table, and directly queries rest of the fields.
 *
 * @author satosh.dhanyamraju
 */

/**
 * Used for Social DB migration from version n-1 to n where n is reference from `LOCATION_VIEW_SQL_n`
 */
const val LOCATION_VIEW_SQL_10 = "SELECT l.parentid,l.level, l.isAlsoParent, l.id,l.name,l.displayName,l.entityType,l.subType,l.entityLayout,l.contentUrl,l.entityInfoUrl,l.handle,l.deeplinkUrl,l.moreContentLoadUrl,l.entityImageUrl,l.shareUrl,l.nameEnglish,l.appIndexDescription,l.isRemovable,l.allowReorder,l.isServerDetermined,l.viewOrder,l.contentRequestMethod,l.enableWebHistory,l.moreText,l.description,l.descriptionUrl,l.subTitle,l.defaultTabId,l.carouselUrl,l.badgeType,l.isFollowable,l.legacyKey,l.createPostText,l.createPostType,l.showParentInTab,l.share_shareTitle,l.share_shareDescription,l.share_sourceName,l.header_bannerImageUrl,l.header_headerType,l.header_logoUrl,l.header_hideLogo,l.header_hideMastHead,l.counts_story_value,l.counts_story_ts,l.counts_sources_value,l.counts_sources_ts,l.counts_follow_value,l.counts_follow_ts,l.counts_like_value,l.counts_like_ts,l.counts_comments_value,l.counts_comments_ts,l.counts_views_value,l.counts_views_ts,l.counts_share_value,l.counts_share_ts,l.counts_sad_value,l.counts_sad_ts,l.counts_happy_value,l.counts_happy_ts,l.counts_love_value,l.counts_love_ts,l.counts_angry_value,l.counts_angry_ts,l.counts_wow_value,l.counts_wow_ts,l.counts_total_like_value,l.counts_total_like_ts,l.counts_watch_value,l.counts_watch_ts,l.counts_download_value,l.counts_download_ts,l.counts_repost_value,l.counts_repost_ts,l.counts_total_pending_approvals_value,l.counts_total_pending_approvals_ts,l.counts_invites_value,l.counts_invites_ts,l.counts_post_approvals_value,l.counts_post_approvals_ts,l.counts_member_approvals_value,l.counts_member_approvals_ts,l.promotion_iconUrl,l.promotion_colourGradient,l.promotion_indicatorColour,l.promotion_publishTime,l.promotion_expiryTime, CASE WHEN f.`action`='FOLLOW' THEN 1 ELSE 0 END isFollowed FROM locations l LEFT JOIN follow f ON f.entityId = l.id"
const val LOCATION_VIEW_SQL_9 = "SELECT l.parentid,l.level, l.isAlsoParent, l.id,l.name,l.displayName,l.entityType,l.subType,l.entityLayout,l.contentUrl,l.entityInfoUrl,l.handle,l.deeplinkUrl,l.moreContentLoadUrl,l.entityImageUrl,l.shareUrl,l.nameEnglish,l.appIndexDescription,l.isRemovable,l.allowReorder,l.isServerDetermined,l.viewOrder,l.contentRequestMethod,l.enableWebHistory,l.badgeType,l.isFollowable,l.legacyKey,l.createPostText,l.createPostType,l.showParentInTab,l.share_shareTitle,l.share_shareDescription,l.share_sourceName,l.header_bannerImageUrl,l.header_headerType,l.header_logoUrl,l.header_hideLogo,l.header_hideMastHead,l.counts_story_value,l.counts_story_ts,l.counts_sources_value,l.counts_sources_ts,l.counts_follow_value,l.counts_follow_ts,l.counts_like_value,l.counts_like_ts,l.counts_comments_value,l.counts_comments_ts,l.counts_views_value,l.counts_views_ts,l.counts_share_value,l.counts_share_ts,l.counts_sad_value,l.counts_sad_ts,l.counts_happy_value,l.counts_happy_ts,l.counts_love_value,l.counts_love_ts,l.counts_angry_value,l.counts_angry_ts,l.counts_wow_value,l.counts_wow_ts,l.counts_total_like_value,l.counts_total_like_ts,l.counts_watch_value,l.counts_watch_ts,l.counts_download_value,l.counts_download_ts,l.counts_repost_value,l.counts_repost_ts,l.counts_total_pending_approvals_value,l.counts_total_pending_approvals_ts,l.counts_invites_value,l.counts_invites_ts,l.counts_post_approvals_value,l.counts_post_approvals_ts,l.counts_member_approvals_value,l.counts_member_approvals_ts,l.promotion_iconUrl,l.promotion_colourGradient,l.promotion_indicatorColour,l.promotion_publishTime,l.promotion_expiryTime, CASE WHEN f.`action`='FOLLOW' THEN 1 ELSE 0 END isFollowed FROM locations l LEFT JOIN follow f ON f.entityId = l.id"
const val LOCATION_VIEW_SQL_4 = "SELECT l.parentid,l.level, l.isAlsoParent, l.id,l.name,l.displayName,l.entityType,l.subType,l.entityLayout,l.contentUrl,l.entityInfoUrl,l.handle,l.deeplinkUrl,l.moreContentLoadUrl,l.entityImageUrl,l.shareUrl,l.nameEnglish,l.appIndexDescription,l.isRemovable,l.allowReorder,l.isServerDetermined,l.viewOrder,l.contentRequestMethod,l.enableWebHistory,l.badgeType,l.isFollowable,l.legacyKey,l.createPostText,l.createPostType,l.showParentInTab,l.share_shareTitle,l.share_shareDescription,l.share_sourceName,l.header_bannerImageUrl,l.header_headerType,l.header_logoUrl,l.header_hideLogo,l.header_hideMastHead,l.counts_story_value,l.counts_story_ts,l.counts_sources_value,l.counts_sources_ts,l.counts_follow_value,l.counts_follow_ts,l.counts_like_value,l.counts_like_ts,l.counts_comments_value,l.counts_comments_ts,l.counts_views_value,l.counts_views_ts,l.counts_share_value,l.counts_share_ts,l.counts_sad_value,l.counts_sad_ts,l.counts_happy_value,l.counts_happy_ts,l.counts_love_value,l.counts_love_ts,l.counts_angry_value,l.counts_angry_ts,l.counts_wow_value,l.counts_wow_ts,l.counts_total_like_value,l.counts_total_like_ts,l.counts_watch_value,l.counts_watch_ts,l.counts_download_value,l.counts_download_ts,l.counts_repost_value,l.counts_repost_ts,l.counts_total_pending_approvals_value,l.counts_total_pending_approvals_ts,l.counts_invites_value,l.counts_invites_ts,l.counts_post_approvals_value,l.counts_post_approvals_ts,l.counts_member_approvals_value,l.counts_member_approvals_ts, CASE WHEN f.`action`='FOLLOW' THEN 1 ELSE 0 END isFollowed FROM locations l LEFT JOIN follow f ON f.entityId = l.id"

@DatabaseView(value = LOCATION_VIEW_SQL_10, viewName = VIEW_Locations)
data class LocationsView(@Embedded val location: Location)